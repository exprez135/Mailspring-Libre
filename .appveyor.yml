version: '{build}'

environment:
  matrix:
  - job_name: Linux build
    appveyor_build_worker_image: Ubuntu
  - job_name: macOS build
    appveyor_build_worker_image: macos
  - job_name: Windows build
    appveyor_build_worker_image: Visual Studio 2019
  global:
    SIGN_BUILD: false

cache:
  - node_modules -> package.json
  - app\node_modules -> app\package.json

for:

  -
    matrix:
      only:
        - job_name: Linux build

    install:
    - sh: sudo apt update
    - sh: sudo apt install build-essential
    - sh: sudo apt install clang
    - sh: sudo apt install libx11-dev
    - sh: sudo apt install libxkbfile-dev
    - sh: sudo apt install execstack
    - sh: sudo apt install fakeroot
    - sh: sudo apt install g++-4.8
    - sh: sudo apt install git
    - sh: sudo apt install libgnome-keyring-dev
    - sh: sudo apt install libgconf-2-4
    - sh: sudo apt install libsecret-1-dev
    - sh: sudo apt install xvfb
    - sh: sudo apt install rpm
    - sh: sudo apt install libxext-dev
    - sh: sudo apt install libxtst-dev
    - sh: sudo apt install libxkbfile-dev
    - sh: sudo apt install curl

    build_script:
    - sh: npm run lint
    - sh: npm run postinstall
    - sh: DEBUG=electron-packager,electron-osx-sign npm run build

    after_build:
    - sh: ./scripts/deploy.sh

  -
   matrix:
     only:
       - job_name: macOS build

   install:
   - sh: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
   - sh: brew install build-essential
   - sh: brew install clang
   - sh: brew install libx11-dev
   - sh: brew install libxkbfile-dev
   - sh: brew install execstack
   - sh: brew install fakeroot
   - sh: brew install g++-4.8
   - sh: brew install git
   - sh: brew install libgnome-keyring-dev
   - sh: brew install libgconf-2-4
   - sh: brew install libsecret-1-dev
   - sh: brew install xvfb
   - sh: brew install rpm
   - sh: brew install libxext-dev
   - sh: brew install libxtst-dev
   - sh: brew install libxkbfile-dev
   - sh: brew install curl
   
   build_script:
   - sh: npm run lint
   - sh: npm run postinstall
   - sh: DEBUG=electron-packager,electron-osx-sign npm run build

   after_build:
   - sh: ./scripts/deploy.sh

  -
    matrix:
      only:
        - job_name: Windows build

    init:
    - ps: $env:commit = $env:appveyor_repo_commit.SubString(0,8)

    install:
    - ps: Install-Product node 11
    - ps: npm config set msvs_version 2015


    build_script:
    - cmd: npm install && npm run build
    - cmd: node app/build/create-windows-installer.js

    after_build:
    - ps: Get-ChildItem .\app\dist\*.tar.gz | % { Push-AppveyorArtifact $_.FullName -FileName "$($_.Name)" }
    - ps: Get-ChildItem .\app\dist\MailspringSetup.exe | % { Push-AppveyorArtifact $_.FullName -FileName "$($_.Name)" }
    - ps: Get-ChildItem .\app\dist\*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName "$($_.Name)" }
    - ps: Get-ChildItem .\app\dist\RELEASES | % { Push-AppveyorArtifact $_.FullName -FileName "$($_.Name)" }


# Stop Appveyor from "Discovering Tests" forever
test: off
